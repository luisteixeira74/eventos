# Event Dispatcher com Testify Suite

Este projeto implementa um mecanismo de **Event Dispatcher (Despachante de Eventos)** em Go, com suporte a registro e gerenciamento de mÃºltiplos handlers para eventos. A testagem Ã© feita utilizando o poderoso recurso de **test suites do [Testify](https://github.com/stretchr/testify)**, permitindo testes mais organizados, reutilizÃ¡veis e legÃ­veis.

## Objetivo

Demonstrar como aplicar o padrÃ£o de eventos em Go de forma simples e testÃ¡vel, utilizando a biblioteca `testify/suite` para:

- Evitar duplicaÃ§Ã£o de cÃ³digo nos testes.
- Organizar os testes com setup automatizado.
- Manter a coesÃ£o e clareza entre diferentes casos de teste.

---

## Estrutura

### ğŸ“¦ `EventDispatcher`

Arquivo: `event_dispatcher.go`

- Estrutura responsÃ¡vel por registrar, armazenar e limpar handlers associados a eventos.
- Impede o registro duplicado de handlers para o mesmo evento.

### ğŸ“¦ `EventDispatcherTestSuite`

Arquivo: `event_dispatcher_test.go`

- Test suite baseada em `testify/suite`.
- Inclui testes para:
  - Registro de handlers.
  - Registro duplicado (com erro esperado).
  - Limpeza de todos os handlers (`Clear()`).


## Executando os tests

go test ./...

### `RabbitMQ`

docker-compose up -d

RabbitMQ Web: `http://localhost:15672/`

- login: guest
- Passw: guest